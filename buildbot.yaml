# Set up a 2 host buildbot setup in Rackspace cloud
#

- name: Boot Instances
  hosts: localhost
  connection: local
  gather_facts: false
  tags:
    - remoteconfig
    - boot

  vars_files:
    - "vars/common.yml"

# Do it once to get all of them launched without waiting, then do it again to
# actually wait and register
  tasks:
    - name: launch master nowait
      action:
          module: rax
          creds_file: ${creds}
          region: ${region}
          name: buildbot-master.j2solutions.net
          image: ${image}
          flavor: ${flavor}
          files: /root/.ssh/authorized_keys=/Users/jkeating/.ssh/authorized_keys
          wait: false
    - name: launch slave nowait
      action:
          module: rax
          creds_file: ${creds}
          region: ${region}
          name: buildbot-slave.j2solutions.net
          image: ${image}
          flavor: ${flavor}
          files: /root/.ssh/authorized_keys=/Users/jkeating/.ssh/authorized_keys
          wait: false
    - name: wait for master
      action:
          module: rax
          creds_file: ${creds}
          region: ${region}
          name: buildbot-master.j2solutions.net
          image: ${image}
          flavor: ${flavor}
          files: /root/.ssh/authorized_keys=/Users/jkeating/.ssh/authorized_keys
          wait: true
      register: master
    - name: wait for slave
      action:
          module: rax
          creds_file: ${creds}
          region: ${region}
          name: buildbot-slave.j2solutions.net
          image: ${image}
          flavor: ${flavor}
          files: /root/.ssh/authorized_keys=/Users/jkeating/.ssh/authorized_keys
          wait: true
      register: slave
    - name: register master
      action: add_host hostname=master
              ansible_ssh_host=${master.instances[0].accessIPv4}
    - name: register slave
      action: add_host hostname=slave
              ansible_ssh_host=${slave.instances[0].accessIPv4}

- name: Prep master
  hosts: master
  user: root
  gather_facts: false
  tags:
    - remoteconfig
    - master

  vars_files:
    - "vars/common.yml"

  tasks:
    - name: remove firewalld
      yum: name=firewalld state=absent
    - name: install packages
      yum: name=${item} state=latest
      with_items: master_pkgs
    - name: create buildbot user
      user: home=${buildbot_home} name=buildbot state=present system=yes
    - name: copy firewall config
      copy: src=files/iptables-master dest=/etc/sysconfig/iptables
      notify:
        - restart iptables

  handlers:
    - name: restart iptables
      service: name=iptables state=restarted

- name: Config / start master
  hosts: master
  user: root
  sudo: yes
  sudo_user: buildbot
  gather_facts: false
  tags:
    - remoteconfig
    - master

  vars_files:
    - "vars/common.yml"

  vars:
    master_ip: ${inventory_hostname}

  tasks:
    - name: buildbot create master
      command: buildbot create-master -r ${buildbot_home}
               creates=${buildbot_home}/buildbot.tac
    - name: add master.cfg
      template: dest=${buildbot_home}/master.cfg src=templates/master.j2
                owner=buildbot
      notify:
        - reconfigure buildbot
    - name: check for buildbot process
      command: pgrep -fc "buildbot start ${buildbot_home}"
      ignore_errors: yes
      register: pgrep
    - name: start buildbot master
      command: buildbot start ${buildbot_home}
      when: pgrep.rc > 0

  handlers:
    - include: tasks/refresh-buildbot.yml
